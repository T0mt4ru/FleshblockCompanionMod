--- a/net/minecraft/client/renderer/block/model/FaceBakery.java
+++ b/net/minecraft/client/renderer/block/model/FaceBakery.java
@@ -54,10 +_,19 @@
         Direction direction = calculateFacing(aint);
         System.arraycopy(afloat, 0, blockfaceuv.uvs, 0, afloat.length);
         if (p_111607_ == null) {
+            // Neo: Suppress winding re-calculation when the quads may not be axis-aligned due to root transforms
+            if (!p_111606_.mayApplyArbitraryRotation())
             this.recalculateWinding(aint, direction);
         }
 
-        return new BakedQuad(aint, p_111603_.tintIndex(), direction, p_111604_, p_111608_);
+        net.neoforged.neoforge.client.ClientHooks.fillNormal(aint, direction);
+        var data = p_111603_.faceData();
+        var quad = new BakedQuad(aint, p_111603_.tintIndex(), direction, p_111604_, p_111608_, data.ambientOcclusion());
+        if (!net.neoforged.neoforge.client.model.ExtraFaceData.DEFAULT.equals(data)) {
+            net.neoforged.neoforge.client.model.QuadTransformers.applyingLightmap(data.blockLight(), data.skyLight()).processInPlace(quad);
+            net.neoforged.neoforge.client.model.QuadTransformers.applyingColor(data.color()).processInPlace(quad);
+        }
+        return quad;
     }
 
     public static BlockFaceUV recomputeUVs(BlockFaceUV p_111582_, Direction p_111583_, Transformation p_111584_) {
